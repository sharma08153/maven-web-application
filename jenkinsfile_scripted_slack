node{
echo "Jobe name is: ${env.JOB_NAME}"
echo "Build number is: ${env.BUILD_NUMBER}"
echo "Node name is: ${env.NODE_NAME}"
echo "Jenkins home dir is: ${env.JENKINS_HOME}"  

properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])

def mavenHome=tool name="maven3.9.3"
try
{
stage('CheckoutCode'){
git branch: 'development', credentialsId: '283bb7b7-b30b-4346-8e95-49599fef3892', url: 'https://github.com/sharma08153/maven-web-application.git'
}

stage('Build'){
sh "${mavenHome}/bin/mvn clean package"
}
}
/*
stage('ExcuteSonarQubeReport'){
sh "${mavenHome}/bin/mvn clean sonar:sonar package"
}

stage('UploadArtifatIntoNexus'){
sh "${mavenHome}/bin/mvn clean deploy"
}

stage('DeployAppIntoTomcatServer'){
sshagent(['09e882e8-40f5-4879-b2fc-a64339ff4939']) {
sh "scp -o StrickHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.6.8:/opt/apache-tomcat-9.0.78/webapps"
}
}
*/

catch(e)
{
currentBuild.result = "FAILED"
throw e
}

finally{
sendSlackNotifications(currentBuild.result)
}

}//Node closing

def sendSlackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    colorName = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    colorName = 'GREEN'
    colorCode = '#00FF00'
  } else {
    colorName = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
